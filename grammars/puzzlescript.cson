'scopeName': 'source.puzzlescript'
'fileTypes': [
  'puzzlescript'
  'txt'
]
'name': 'PuzzleScript'
'limitLineLength': no
'maxTokensPerLine': 1000

'repository': {
  # Strings for title, author, homepage etc.
  'metadata':
    'patterns': [
      {
        'name': 'keyword.control.metadata.puzzlescript'
        'match': '^(title|author|homepage|youtube|color_palette|again_interval|background_color|text_color|key_repeat_interval|realtime_interval|norepeat_action|noundo|norestart|run_rules_on_level_start|require_player_movement|zoomscreen|flickscreen|debug|verbose_logging|throttle_movement|noaction|quiet|nokeyboard)*\\s+(.*)$'
        'captures': {
          '1': { 'name': 'keyword.other.metadata.puzzlescript' }
          '2': { 'name': 'string.other.metadata-value.puzzlescript' }
        }
      }
    ]

  # Comments
  'comment':
    'patterns': [
      {
        'name': 'comment.line.puzzlescript'
        'match': '(\\(.*\\))|(\\bremember\\b.*)$'
      }
    ]

  # Color definitions in object sprites
  'color':
    'patterns': [
      {
        'name': 'constant.other.color.puzzlescript'
        'match': '#[0-9a-fA-F]{3,6}'
      },
      {
        'name': 'constant.language.color.puzzlescript'
        'match': '\\b(BLACK|WHITE|DARKGRAY|LIGHTGRAY|GRAY|RED|DARKRED|LIGHTRED|BROWN|DARKBROWN|LIGHTBROWN|ORANGE|YELLOW|GREEN|DARKGREEN|LIGHTGREEN|BLUE|LIGHTBLUE|DARKBLUE|PURPLE|PINK|TRANSPARENT)\\b'
      }
    ]

  # Section headers
  'section':
    'patterns': [
      {
        'name': 'entity.name.section.puzzlescript'
        'match': '^={3,}\\s*(OBJECTS|LEGEND|SOUNDS|COLLISIONLAYERS|RULES|WINCONDITIONS|LEVELS)\\s*={3,}$'
        'captures': {
          '1': { 'name': 'entity.name.section.type.puzzlescript' }
        }
      }
    ]

  # Rules syntax
  'rule':
    'patterns': [
      {
        'name': 'keyword.operator.logical.puzzlescript'
        'match': '\\b(UP|DOWN|LEFT|RIGHT|HORIZONTAL|VERTICAL|ACTION|STATIONARY|PARALLEL|RANDOMDIR|RANDOM|late|rigid|global|once|MOVING|STATIONARY|ORTHOGONAL|no|on|[+])\\b'
      },
      {
        'name': 'keyword.operator.arrow.puzzlescript'
        'match': '->'
      },
      {
        'name': 'keyword.control.brackets.puzzlescript'
        'match': '[\\[\\]\\|]'
      },
      {
        'name': 'keyword.control.flow.puzzlescript'
        'match': '\\bagain\\b'
      }
    ]

  # Object definitions
  'object':
    'patterns': [
      {
        'name': 'variable.other.object.puzzlescript'
        'match': '^([a-zA-Z][a-zA-Z0-9_]*)\\s*$'
      }
    ]
  
  # Level definitions
  'level':
    'patterns': [
      {
        'name': 'string.quoted.level-layout.puzzlescript'
        'match': '^[a-zA-Z0-9#\\.]+$'
      },
      {
        'name': 'keyword.control.message.puzzlescript'
        'match': '^message\\s+(.*)$'
        'captures': {
          '1': { 'name': 'string.quoted.message.puzzlescript' }
        }
      }
    ]
}

'patterns': [
  # Include metadata patterns
  {
    'include': '#metadata'
  },
  
  # Include comment patterns
  {
    'include': '#comment'
  },
  
  # Include section headers
  {
    'include': '#section'
  },
  
  # Include color patterns
  {
    'include': '#color'
  },
  
  # Include rule patterns
  {
    'include': '#rule'
  },
  
  # Include object patterns
  {
    'include': '#object'
  },
  
  # Include level patterns
  {
    'include': '#level'
  },
  
  # Sprite patterns - lines of 0s, 1s, 2s, 3s, and dots
  {
    'name': 'string.quoted.sprite.puzzlescript'
    'match': '^[0-9\\.]+$'
  },
  
  # LEGEND section equality patterns
  {
    'name': 'keyword.operator.assignment.puzzlescript'
    'match': '\\s*=\\s*'
  },
  
  # Win condition operators
  {
    'name': 'keyword.control.wincondition.puzzlescript'
    'match': '\\b(ALL|NO|SOME|ANY)\\b'
  },
  
  # Sound effects and command words
  {
    'name': 'support.function.puzzlescript'
    'match': '\\b(sfx0|sfx1|sfx2|sfx3|sfx4|sfx5|sfx6|sfx7|sfx8|sfx9|sfx10|checkpoint|restart|win|message|cancel)\\b'
  }
] 